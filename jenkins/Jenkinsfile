node('nodejs8') {
  stage ('checkout') {
    checkout scm
  }
  stage ('install modules'){
    sh '''
      npm install --verbose -d 
      npm install --save classlist.js
    '''
  }
  try{
    stage ('test') {
      sh '''
        ls -l /opt/google/chrome/chrome-sandbox
        $(npm bin)/ng test --single-run --browsers Chrome_no_sandbox
      '''
    }
  } finally {
    junit "test-results.xml"
  }
  stage ('code quality'){
    sh '$(npm bin)/ng lint'
  }
  stage ('build') {
    sh '$(npm bin)/ng build --prod --build-optimizer'
  }
  stage ('build image') {
    sh '''
      mkdir -p /tmp/build/inputs/
      cp /tmp/workspace/digitalrig/digitalrig-angular-example-pipeline/Dockerfile /tmp/build/inputs/
      mkdir dist/nginx-cfg
      cp nginx/status.conf dist/nginx-cfg
    '''
  }
   
  
 stage('Build Image') {
 script {
 openshift.withCluster() {
 openshift.selector("bc", "demo").startBuild("--from-dir=dist , "--follow")
 }
 }
 }

 
 stage('Promote to DEV') {
 script {
 openshift.withCluster() {
 openshift.tag("demo:latest", "demo:dev")
 }
 }
 }
 
 stage('Create DEV') {
 script {
 openshift.withCluster() {
 openshift.newApp(demo:latest", "--name=demo-dev").narrow('svc').expose()
 }
 }
 }

  
  
  
}
